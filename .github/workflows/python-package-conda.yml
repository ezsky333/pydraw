name: Daily Request

on:
  push:               # 在推送代码时触发
    branches:
      - main         # 替换为你的目标分支，通常是 main 或 master
  schedule:
    - cron: '50 0 * * *' # 每天00:00 (UTC) 执行

jobs:
  send_request:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyjwt

      - name: Parse token expiry and calculate remaining time
        id: parse_token_expiry
        run: |
          python -c "
import jwt
import os
import time
from datetime import datetime, timezone

def get_remaining_time(expiry):
    now = datetime.now(timezone.utc)
    if expiry:
        exp_time = datetime.fromtimestamp(expiry, tz=timezone.utc)
        remaining_time = exp_time - now
        
        days = remaining_time.days
        seconds = remaining_time.seconds
        hours = seconds // 3600
        minutes = (seconds % 3600) // 60

        if days > 0:
            return f'{days}天'
        elif hours > 0:
            return f'{hours}小时'
        else:
            return '不到一小时'
    else:
        return '未找到过期时间'

def get_token_expiry(token):
    try:
        decoded = jwt.decode(token, options={'verify_signature': False})
        exp = decoded.get('exp')
        return get_remaining_time(exp)
    except Exception as e:
        return str(e)

forum_token_expiry = get_token_expiry(os.getenv('FORUM_TOKEN'))
forum_token_lin_expiry = get_token_expiry(os.getenv('FORUM_TOKEN_LIN'))
forum_token_wang_expiry = get_token_expiry(os.getenv('FORUM_TOKEN_WANG'))

print(f'::set-output name=forum_token_expiry::{forum_token_expiry}')
print(f'::set-output name=forum_token_lin_expiry::{forum_token_lin_expiry}')
print(f'::set-output name=forum_token_wang_expiry::{forum_token_wang_expiry}')
          "

      - name: Send POST request for 一斩
        id: request_1
        run: |
          response=$(curl --location --request POST 'https://edu.definesys.cn/edu-api/forumSign/sign' \
          --header "Token: ${{ secrets.FORUM_TOKEN }}")
          echo "::set-output name=response::$response"
      - name: Send POST request for 林老师
        id: request_lin
        run: |
          response=$(curl --location --request POST 'https://edu.definesys.cn/edu-api/forumSign/sign' \
          --header "Token: ${{ secrets.FORUM_TOKEN_LIN }}")
          echo "::set-output name=response::$response"
      - name: Send POST request for 王老师
        id: request_wang
        run: |
          response=$(curl --location --request POST 'https://edu.definesys.cn/edu-api/forumSign/sign' \
          --header "Token: ${{ secrets.FORUM_TOKEN_WANG }}")
          echo "::set-output name=response::$response"

      - name: Evaluate responses and send consolidated message
        run: |
          format_response() {
            local response=$1
            local name=$2
            local token_expiry=$3
            local code=$(echo $response | jq -r '.code')
            local message=$(echo $response | jq -r '.message')
            if [[ $code == "ok" ]]; then
              echo "**$name：** 签到成功！🎉 (Token 过期时间：$token_expiry)"
            else
              echo "**$name：** 签到失败：$message ❌ (Token 过期时间：$token_expiry)"
            fi
          }

          response_1='${{ steps.request_1.outputs.response }}'
          response_lin='${{ steps.request_lin.outputs.response }}'
          response_wang='${{ steps.request_wang.outputs.response }}'

          token_expiry_1='${{ steps.parse_token_expiry.outputs.forum_token_expiry }}'
          token_expiry_lin='${{ steps.parse_token_expiry.outputs.forum_token_lin_expiry }}'
          token_expiry_wang='${{ steps.parse_token_expiry.outputs.forum_token_wang_expiry }}'

          message_1=$(format_response "$response_1" "一斩" "$token_expiry_1")
          message_lin=$(format_response "$response_lin" ${{ secrets.FORUM_NAME_LIN }} "$token_expiry_lin")
          message_wang=$(format_response "$response_wang" ${{ secrets.FORUM_NAME_WANG }} "$token_expiry_wang")

          final_message="$message_1\n$message_lin\n$message_wang"

          curl --location --request POST 'https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=${{ secrets.WECHAT_WORK_WEBHOOK_KEY }}' \
          --header 'Content-Type: application/json' \
          --data-raw "{\"msgtype\": \"markdown\", \"markdown\": {\"content\": \"$final_message\"}}"
